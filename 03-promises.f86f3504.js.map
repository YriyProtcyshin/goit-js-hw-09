{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBA0B3C,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAlCQN,SAASC,cAAc,mBAG/Ba,iBAAiB,SAGxB,SAAuBC,GACrBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOnB,EAAWoB,OAE9BN,YAAW,KACT,IAAK,IAAIO,EAAI,EAAGA,GAAKjB,EAAYgB,MAAOC,GAAK,EAC3ChB,EAAcgB,EAAGH,GACdI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAyB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,UAEtDkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAyB,OAAOG,QAAQ,sBAAoBpB,QAAeC,UAEtDW,GAASC,OAAOhB,EAAUiB,SAE3BF","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// -----------------------------------------------------------------------\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst button = document.querySelector('[type=\"submit\"]');\n// ------------------------------------------------------------------------\n\nbutton.addEventListener('click', onButtonClick);\n\n//--------------------------------------------------------------------------\nfunction onButtonClick(e) {\n  e.preventDefault();\n  let delay = Number(delayInput.value);\n\n  setTimeout(() => {\n    for (let i = 1; i <= amountInput.value; i += 1) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delay += Number(stepInput.value);\n    }\n  }, delay);\n}\n\n// --------- Create Promise -------------------------------------------------\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.f86f3504.js.map"}